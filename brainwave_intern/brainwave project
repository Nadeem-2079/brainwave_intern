import os
import pickle

class ATM:
    def __init__(self):
        self.users = {}
        self.logged_in_user = None
        self.load_data()

    def load_data(self):
        if os.path.exists("atm_data.pkl"):
            with open("atm_data.pkl", "rb") as f:
                self.users = pickle.load(f)

    def save_data(self):
        with open("atm_data.pkl", "wb") as f:
            pickle.dump(self.users, f)

    def create_account(self):
        print("\nAccount Creation:")
        username = input("Enter a username: ")
        if username in self.users:
            print("Username already exists. Please Try again.")
            return
        pin = input("Enter your PIN as passcode (4 digits): ")
        if len(pin) != 4 or not pin.isdigit():
            print("Invalid PIN format. Please enter a 4-digit number.")
            return
        balance = float(input("Enter initial deposit amount: $"))
        self.users[username] = {"pin": pin, "balance": balance}
        self.save_data()
        print(f"Account created successfully for {username}!")

    def login(self):
        print("\nLogin:")
        username = input("Enter your username: ")
        if username not in self.users:
            print("Username is not found. Please create an account first and then try again later.")
            return False
        pin = input("Enter your PIN: ")
        if pin == self.users[username]["pin"]:
            self.logged_in_user = username
            print(f"Welcome, {username}!")
            return True
        else:
            print("Incorrect PIN. Try again.")
            return False

    def logout(self):
        self.logged_in_user = None
        print("You have been logged out successfully.")

    def check_balance(self):
        balance = self.users[self.logged_in_user]["balance"]
        print(f"Your current balance is: ${balance:.2f}")

    def deposit(self):
        try:
            amount = float(input("Enter the amount to deposit: $"))
            if amount > 0:
                self.users[self.logged_in_user]["balance"] += amount
                print(f"${amount:.2f} deposited successfully.")
                self.save_data()
            else:
                print("Invalid amount. Please enter a positive number.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

    def withdraw(self):
        try:
            amount = float(input("Enter amount to withdraw: $"))
            balance = self.users[self.logged_in_user]["balance"]
            if amount > 0 and amount <= balance:
                self.users[self.logged_in_user]["balance"] -= amount
                print(f"${amount:.2f} withdrawn successfully.")
                self.save_data()
            elif amount > balance:
                print("Insufficient funds.")
            else:
                print("Invalid amount. Please enter a positive number.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

    def atm_menu(self):
        while True:
            print("\nATM Menu:")
            print("1. Log In")
            print("2. Create Account")
            print("3. Exit")
            choice = input("Choose an option (1/2/3): ")

            if choice == "1":
                if self.login():
                    self.user_menu()
            elif choice == "2":
                self.create_account()
            elif choice == "3":
                print("Thank you for using the ATM. Goodbye!")
                self.save_data()
                break
            else:
                print("Invalid choice. Please try again.")

    def user_menu(self):
        while True:
            print("\nUser Menu:")
            print("1. Check Balance")
            print("2. Deposit Money")
            print("3. Withdraw Money")
            print("4. Log Out")
            choice = input("Choose an option (1/2/3/4): ")

            if choice == "1":
                self.check_balance()
            elif choice == "2":
                self.deposit()
            elif choice == "3":
                self.withdraw()
            elif choice == "4":
                self.logout()
                break
            else:
                print("Invalid choice. Please try again.")

if __name__ == "__main__":
    atm = ATM()
    atm.atm_menu()
